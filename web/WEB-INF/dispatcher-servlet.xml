<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <!--这里用来加载web组件的bean，相当于java配置中的WebConfig-->

    <context:component-scan base-package="advice"/>
    <context:component-scan base-package="controller"/>


    <bean id="tokenManager" class="security.impl.DefaultTokenManager"/>

    <!--定制jackson序列化行为并注入到MappingJackson2HttpMessageConverter中-->
    <bean id="objectMapper" class="util.CustomObjectMapper" init-method="init">
        <property name="camelCaseToLowerCaseWithUnderscores" value="true"/>
        <property name="dateFormatPattern" value="yyyy-MM-dd HH:mm:ss"/>
    </bean>
    <!--使用 Jackson 来提供 JSON 的序列化操作（返回对象能够直接转化为json）-->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper" ref="objectMapper"/>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <!--没有定制的情况下用这个
    <mvc:annotation-driven>-->
        <!--<mvc:message-converters>-->
            <!--<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>-->
        <!--</mvc:message-converters>-->
    <!--</mvc:annotation-driven>-->


    <!--利用token提供安全机制的配置-->
    <bean id="securityAspect" class="security.SecurityAspect">
        <property name="tokenManager" ref="tokenManager"/>
        <property name="tokenName" value="X-Token"/>
        <property name="permissionName" value="Permission"/>
    </bean>
        <!--拦截注解为RequestMapping的行为（即拦截 Controller 类的方法）-->
    <aop:config>
        <aop:aspect ref="securityAspect">
            <aop:around method="execute" pointcut="@annotation(org.springframework.web.bind.annotation.RequestMapping)"/>
        </aop:aspect>
    </aop:config>

    <!--上传文件-->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.support.StandardServletMultipartResolver">
    </bean>


</beans>